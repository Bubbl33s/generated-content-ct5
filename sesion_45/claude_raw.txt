# RESPUESTA RAW DE CLAUDE
# Esta es la respuesta exacta que envió Claude

{
  "contenido_md": "# Sesión 45: useEffect y simulación de carga\n\n## 🤝 Acuerdos de clase\n- Ser amable y respetuosa\n- Participar activamente\n- Apoyarnos mutuamente\n- Preguntar cuando tengamos dudas\n\n## 🌟 Actividad inicial: ¿Qué es lo que más te emociona aprender hoy?\nComparte con la clase mientras nos preparamos para descubrir el fascinante mundo de useEffect 💫\n\n## 🎯 Objetivos de la sesión\n- Entender qué es useEffect y para qué lo usamos\n- Aprender a simular estados de carga en nuestras aplicaciones\n- Practicar con ejemplos divertidos\n\n## 📱 ¿Qué es useEffect?\nEs como un ayudante especial en React que nos permite:\n- Ejecutar código cuando algo cambia\n- Controlar cuándo queremos que ocurran ciertas acciones\n- Manejar efectos secundarios en nuestros componentes\n\n## 🎬 Ejemplo básico\n```jsx\nimport { useEffect } from 'react';\n\nuseEffect(() => {\n  console.log('¡Hola! El componente se montó');\n}, []);\n```\n\n## 🎨 Anatomía de useEffect\n1. Función que queremos ejecutar\n2. Array de dependencias (opcional)\n3. Función de limpieza (opcional)\n\n## 💡 ¿Cuándo se ejecuta?\n- Al montar el componente\n- Cuando cambian las dependencias\n- Al desmontar el componente (cleanup)\n\n## ⚡ Práctica 1: Título dinámico\nVamos a crear un componente que cambie el título de la página:\n\n```jsx\nfunction TituloDinamico() {\n  useEffect(() => {\n    document.title = '¡Mi súper página!';\n  }, []);\n  \n  return <h1>Bienvenida a mi página</h1>;\n}\n```\n\n## 🔄 Estados de carga\nCuando una aplicación carga datos:\n1. Estado inicial (loading)\n2. Datos cargados (success)\n3. Error (si algo sale mal)\n\n## 🎮 Práctica 2: Simulador de carga\nCrearemos un componente que simule cargar datos:\n\n```jsx\nfunction CargadorDatos() {\n  const [estaCargando, setEstaCargando] = useState(true);\n  const [datos, setDatos] = useState([]);\n\n  useEffect(() => {\n    setTimeout(() => {\n      setDatos(['🌸', '🌺', '🌹', '🌷']);\n      setEstaCargando(false);\n    }, 2000);\n  }, []);\n\n  if (estaCargando) return <p>Cargando flores...</p>;\n  return (\n    <div>\n      {datos.map((flor, index) => (\n        <span key={index}>{flor}</span>\n      ))}\n    </div>\n  );\n}\n```\n\n## 🎯 Ejercicio en clase\nCrear un componente que:\n1. Muestre \"Cargando...\"\n2. Después de 3 segundos, muestre tu emoji favorito\n3. Use useState y useEffect\n\n## 🌈 Tips importantes\n- useEffect siempre va dentro del componente\n- El array de dependencias vacío [] significa \"solo al montar\"\n- ¡Cuidado con los loops infinitos!\n\n## 🎨 Proyecto práctico\nCrearemos una página de perfil que:\n1. Muestre \"Cargando perfil...\"\n2. Simule cargar datos después de 2 segundos\n3. Muestre un perfil con:\n   - Nombre\n   - Emoji favorito\n   - Color favorito\n\n## 🌟 ¡A practicar!\nTrabaja en el proyecto con una compañera y personaliza los datos.\n\n## 📝 Resumen\n- useEffect nos ayuda a manejar efectos secundarios\n- Podemos simular estados de carga\n- Es importante controlar cuándo se ejecuta el efecto\n\n## 🎉 ¡Celebremos lo aprendido!\nComparte con la clase:\n- ¿Qué fue lo más interesante que aprendiste?\n- ¿Qué te gustaría crear con useEffect?\n\n## 🏠 Tarea\nModifica el proyecto de perfil para agregar:\n- Un botón que actualice algún dato\n- Una animación mientras carga\n- ¡Usa tu creatividad!",
  "necesita_codigo": true,
  "codigo_actividades": "// Proyecto: Perfil con estado de carga\nimport { useState, useEffect } from 'react';\n\nfunction PerfilUsuaria() {\n  const [estaCargando, setEstaCargando] = useState(true);\n  const [perfil, setPerfil] = useState(null);\n\n  useEffect(() => {\n    // Simulamos la carga de datos\n    setTimeout(() => {\n      setPerfil({\n        nombre: 'Ana',\n        emoji: '🦋',\n        color: 'Morado'\n      });\n      setEstaCargando(false);\n    }, 2000);\n  }, []);\n\n  if (estaCargando) {\n    return <div className=\"cargando\">Cargando perfil...</div>;\n  }\n\n  return (\n    <div className=\"perfil\">\n      <h2>¡Hola! Soy {perfil.nombre}</h2>\n      <p>Mi emoji favorito es: {perfil.emoji}</p>\n      <p>Mi color favorito es: {perfil.color}</p>\n    </div>\n  );\n}\n\nexport default PerfilUsuaria;",
  "necesita_capturas": false,
  "capturas_info": {}
}