{
  "contenido_md": "# useState y eventos en React 💫\n\n## ¡Bienvenidas! 👋\n\n### Acuerdos de clase 🤝\n- Ser amables y respetuosas\n- Participar activamente\n- Aprender juntas\n\n---\n\n### Actividad inicial: ¿Qué harías? 🤔\nSi tuvieras una app de Instagram, ¿qué cosas necesitarían cambiar/actualizarse?\n- Likes en fotos\n- Número de seguidores\n- Comentarios nuevos\n- Estado de historias\n\n---\n\n## ¿Qué es el estado en React? 🎯\n\nEl estado es como la \"memoria\" de nuestros componentes:\n- Guarda datos que pueden cambiar\n- Cuando cambia, el componente se actualiza\n- Nos ayuda a hacer nuestras apps interactivas\n\n---\n\n## Introduciendo useState 🎨\n\n```jsx\nimport { useState } from 'react';\n\nfunction MiComponente() {\n  const [contador, setContador] = useState(0);\n  // ...\n}\n```\n\n- useState es un hook de React\n- Nos da una variable y una función para actualizarla\n- El valor inicial va entre paréntesis\n\n---\n\n### Práctica 1: Contador Simple 🔢\n\nCreemos un contador que aumente y disminuya:\n\n```jsx\nfunction Contador() {\n  const [numero, setNumero] = useState(0);\n\n  return (\n    <div>\n      <h2>Contador: {numero}</h2>\n      <button onClick={() => setNumero(numero + 1)}>+</button>\n      <button onClick={() => setNumero(numero - 1)}>-</button>\n    </div>\n  );\n}\n```\n\n---\n\n## Eventos en React 🎮\n\nLos eventos nos permiten responder a acciones del usuario:\n- onClick: cuando hacen clic\n- onChange: cuando escriben en un input\n- onSubmit: cuando envían un formulario\n\n---\n\n### Práctica 2: Input con estado 📝\n\nCreemos un input que muestre lo que escribimos:\n\n```jsx\nfunction Saludo() {\n  const [nombre, setNombre] = useState('');\n\n  return (\n    <div>\n      <input \n        value={nombre}\n        onChange={(e) => setNombre(e.target.value)}\n        placeholder=\"Escribe tu nombre\"\n      />\n      <p>¡Hola {nombre}!</p>\n    </div>\n  );\n}\n```\n\n---\n\n## Mini-proyecto: Lista de tareas simple 📋\n\nVamos a crear una lista donde podamos:\n- Agregar tareas\n- Marcarlas como completadas\n\n```jsx\nfunction ListaTareas() {\n  const [tarea, setTarea] = useState('');\n  const [lista, setLista] = useState([]);\n\n  const agregarTarea = () => {\n    if (tarea.trim() !== '') {\n      setLista([...lista, { texto: tarea, completada: false }]);\n      setTarea('');\n    }\n  };\n\n  return (\n    <div>\n      <h2>Mis Tareas</h2>\n      <input \n        value={tarea}\n        onChange={(e) => setTarea(e.target.value)}\n        placeholder=\"Nueva tarea\"\n      />\n      <button onClick={agregarTarea}>Agregar</button>\n      \n      <ul>\n        {lista.map((item, index) => (\n          <li key={index}>\n            <input \n              type=\"checkbox\"\n              checked={item.completada}\n              onChange={() => {\n                const nuevaLista = [...lista];\n                nuevaLista[index].completada = !nuevaLista[index].completada;\n                setLista(nuevaLista);\n              }}\n            />\n            <span style={{ textDecoration: item.completada ? 'line-through' : 'none' }}>\n              {item.texto}\n            </span>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n```\n\n---\n\n## Reto final: Personaliza tu lista 🎨\n\nAgrega estas funcionalidades:\n1. Un botón para eliminar tareas\n2. Un contador de tareas completadas\n3. Cambia los estilos (colores, fuentes)\n\n---\n\n## ¡Celebremos lo aprendido! 🎉\n\n- Usamos useState para manejar datos\n- Respondimos a eventos del usuario\n- Creamos una app interactiva\n\n---\n\n### Para la próxima clase:\nPiensen en qué otras cosas les gustaría hacer con estados 🤔",
  "necesita_codigo": true,
  "codigo_actividades": "// App.jsx\nimport { useState } from 'react';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <h1>Aprendiendo useState y eventos</h1>\n      <Contador />\n      <Saludo />\n      <ListaTareas />\n    </div>\n  );\n}\n\nfunction Contador() {\n  const [numero, setNumero] = useState(0);\n\n  return (\n    <div className=\"contador\">\n      <h2>Contador: {numero}</h2>\n      <button onClick={() => setNumero(numero + 1)}>+</button>\n      <button onClick={() => setNumero(numero - 1)}>-</button>\n    </div>\n  );\n}\n\nfunction Saludo() {\n  const [nombre, setNombre] = useState('');\n\n  return (\n    <div className=\"saludo\">\n      <input \n        value={nombre}\n        onChange={(e) => setNombre(e.target.value)}\n        placeholder=\"Escribe tu nombre\"\n      />\n      <p>¡Hola {nombre}!</p>\n    </div>\n  );\n}\n\nfunction ListaTareas() {\n  const [tarea, setTarea] = useState('');\n  const [lista, setLista] = useState([]);\n\n  const agregarTarea = () => {\n    if (tarea.trim() !== '') {\n      setLista([...lista, { texto: tarea, completada: false }]);\n      setTarea('');\n    }\n  };\n\n  return (\n    <div className=\"lista-tareas\">\n      <h2>Mis Tareas</h2>\n      <div className=\"agregar-tarea\">\n        <input \n          value={tarea}\n          onChange={(e) => setTarea(e.target.value)}\n          placeholder=\"Nueva tarea\"\n        />\n        <button onClick={agregarTarea}>Agregar</button>\n      </div>\n      \n      <ul>\n        {lista.map((item, index) => (\n          <li key={index}>\n            <input \n              type=\"checkbox\"\n              checked={item.completada}\n              onChange={() => {\n                const nuevaLista = [...lista];\n                nuevaLista[index].completada = !nuevaLista[index].completada;\n                setLista(nuevaLista);\n              }}\n            />\n            <span style={{ textDecoration: item.completada ? 'line-through' : 'none' }}>\n              {item.texto}\n            </span>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n\nexport default App;",
  "necesita_capturas": false,
  "capturas_info": {}
}