# RESPUESTA RAW DE CLAUDE
# Esta es la respuesta exacta que envi√≥ Claude

{
  "contenido_md": "# Sesi√≥n 54: Componentes reutilizables y layout\n\n## ü§ù Acuerdos de clase\n- Ser amable y respetuosa\n- Participar activamente\n- Ayudarnos entre todas\n\n## üåü Actividad inicial\n¬øCu√°l es tu componente favorito de una p√°gina web y por qu√©?\n\n## üìö ¬øQu√© aprenderemos hoy?\n- Componentes reutilizables en React\n- Creaci√≥n de layouts comunes\n- Buenas pr√°cticas de organizaci√≥n\n\n## üéØ ¬øPor qu√© es importante?\nCuando creamos sitios web, hay elementos que se repiten muchas veces. ¬°Aprenderemos a ser m√°s eficientes!\n\n## üí° Componentes reutilizables\n\n### ¬øQu√© son?\nSon como bloques de LEGO que podemos usar muchas veces en diferentes lugares.\n\nEjemplo:\n```jsx\nconst Button = ({ text, onClick }) => {\n  return (\n    <button \n      className=\"bg-blue-500 text-white px-4 py-2 rounded\"\n      onClick={onClick}\n    >\n      {text}\n    </button>\n  );\n};\n```\n\n## üèóÔ∏è Creando nuestro primer componente reutilizable\n\n### Card Component\nVamos a crear una tarjeta que podamos usar para mostrar diferentes tipos de contenido:\n\n```jsx\nconst Card = ({ title, description, image }) => {\n  return (\n    <div className=\"bg-white rounded-lg shadow-md p-4\">\n      {image && <img src={image} alt={title} className=\"w-full h-48 object-cover rounded\" />}\n      <h3 className=\"text-xl font-bold mt-2\">{title}</h3>\n      <p className=\"text-gray-600\">{description}</p>\n    </div>\n  );\n};\n```\n\n## üé® Actividad pr√°ctica 1\nCrear un componente Button personalizable:\n1. Debe aceptar color, texto y funci√≥n onClick\n2. Usar Tailwind para los estilos\n3. Implementar diferentes variantes (primary, secondary)\n\n## üìê Layout Components\n\n### ¬øQu√© es un layout?\nEs la estructura base que se repite en diferentes p√°ginas.\n\nEjemplo de Layout b√°sico:\n```jsx\nconst MainLayout = ({ children }) => {\n  return (\n    <div className=\"min-h-screen\">\n      <nav className=\"bg-purple-600 text-white p-4\">\n        <h1>Mi Aplicaci√≥n</h1>\n      </nav>\n      <main className=\"container mx-auto p-4\">\n        {children}\n      </main>\n      <footer className=\"bg-gray-200 p-4 text-center\">\n        ¬© 2024 Mi App\n      </footer>\n    </div>\n  );\n};\n```\n\n## üé® Actividad pr√°ctica 2\nCrear un layout para un blog:\n1. Header con navegaci√≥n\n2. √Årea principal para contenido\n3. Sidebar para categor√≠as\n4. Footer con links\n\n## üîÑ Props y reutilizaci√≥n\n\n### Tips para componentes reutilizables:\n1. Usar props para personalizaci√≥n\n2. Mantener el componente simple\n3. Documentar el uso\n4. Validar props importantes\n\n## üèóÔ∏è Organizando componentes\n\nEstructura recomendada:\n```\nsrc/\n  components/\n    common/\n      Button.jsx\n      Card.jsx\n    layout/\n      MainLayout.jsx\n      Header.jsx\n      Footer.jsx\n```\n\n## üéØ Mini proyecto\nCrear una galer√≠a de productos usando componentes reutilizables:\n1. Componente ProductCard\n2. Layout con header y footer\n3. Grid de productos\n4. Botones de filtrado\n\n## üìù Reflexi√≥n final\n- ¬øQu√© ventajas tiene usar componentes reutilizables?\n- ¬øC√≥mo nos ayuda en proyectos grandes?\n- ¬øQu√© otros componentes podr√≠amos crear?\n\n## üè† Tarea\nCrear 3 componentes reutilizables para tu proyecto:\n1. Un componente de navegaci√≥n\n2. Un componente para mostrar datos\n3. Un layout personalizado\n\n## üåü Recursos adicionales\n- Documentaci√≥n de React sobre componentes\n- Ejemplos de layouts en Tailwind\n- Patrones de dise√±o comunes",
  "necesita_codigo": true,
  "codigo_actividades": "// Actividad 1: Componente Button\nconst Button = ({ color = 'primary', text, onClick }) => {\n  const styles = {\n    primary: 'bg-blue-500 hover:bg-blue-600',\n    secondary: 'bg-gray-500 hover:bg-gray-600',\n    success: 'bg-green-500 hover:bg-green-600'\n  };\n\n  return (\n    <button\n      className={`${styles[color]} text-white px-4 py-2 rounded transition`}\n      onClick={onClick}\n    >\n      {text}\n    </button>\n  );\n};\n\n// Actividad 2: Layout Blog\nconst BlogLayout = ({ children }) => {\n  return (\n    <div className=\"min-h-screen bg-gray-100\">\n      <header className=\"bg-white shadow-md p-4\">\n        <nav className=\"container mx-auto flex justify-between items-center\">\n          <h1 className=\"text-xl font-bold\">Mi Blog</h1>\n          <div className=\"space-x-4\">\n            <a href=\"#\" className=\"hover:text-purple-600\">Inicio</a>\n            <a href=\"#\" className=\"hover:text-purple-600\">Art√≠culos</a>\n            <a href=\"#\" className=\"hover:text-purple-600\">Acerca de</a>\n          </div>\n        </nav>\n      </header>\n\n      <div className=\"container mx-auto p-4 flex gap-4\">\n        <main className=\"flex-grow\">{children}</main>\n        <aside className=\"w-64 bg-white p-4 rounded shadow\">\n          <h2 className=\"font-bold mb-4\">Categor√≠as</h2>\n          <ul className=\"space-y-2\">\n            <li>Tecnolog√≠a</li>\n            <li>Dise√±o</li>\n            <li>Desarrollo</li>\n          </ul>\n        </aside>\n      </div>\n\n      <footer className=\"bg-white mt-8 p-4 text-center\">\n        <div className=\"container mx-auto\">\n          <p>¬© 2024 Mi Blog - Todos los derechos reservados</p>\n        </div>\n      </footer>\n    </div>\n  );\n};\n\n// Mini proyecto: Galer√≠a de productos\nconst ProductCard = ({ name, price, image }) => {\n  return (\n    <div className=\"bg-white rounded-lg shadow-md p-4\">\n      <img src={image} alt={name} className=\"w-full h-48 object-cover rounded\" />\n      <h3 className=\"text-lg font-bold mt-2\">{name}</h3>\n      <p className=\"text-purple-600 font-bold\">${price}</p>\n      <Button text=\"Agregar al carrito\" color=\"primary\" onClick={() => alert('¬°Producto agregado!')} />\n    </div>\n  );\n};\n\nconst ProductGrid = ({ products }) => {\n  return (\n    <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\n      {products.map(product => (\n        <ProductCard key={product.id} {...product} />\n      ))}\n    </div>\n  );\n};",
  "necesita_capturas": false,
  "capturas_info": {}
}